{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"file":"glitchedWriter.min.js","sourceRoot":"","sources":["file:///home/user/studio/node_modules/glitched-writer/node_modules/regenerator-runtime/runtime.js","file:///home/user/studio/node_modules/glitched-writer/glitchedWriter.js"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","const regeneratorRuntime = require('regenerator-runtime')\r\n\r\nconst putEasing = p => p * p * p\r\n\r\nconst random = (min, max, mathFunc = null, easing = false) => {\r\n\tlet p = Math.random()\r\n\tp = easing ? putEasing(p) : p\r\n\tconst w = p * (max - min) + min\r\n\treturn mathFunc == null ? w : Math[mathFunc](w)\r\n}\r\n\r\nconst stringWithoutRepeat = string =>\r\n\t[...new Set([...string])].reduce((set, l) => set + l)\r\n\r\nclass GlitchedWriter {\r\n\tstatic state = {\r\n\t\tstop: false,\r\n\t\ttyping: false,\r\n\t\trestart: false,\r\n\t}\r\n\tstatic settings = {\r\n\t\tsteps: [0, 6],\r\n\t\tdelay: [140, 400],\r\n\t\tfirstDelay: [0, 1700],\r\n\t\tghostsProbability: 0.1,\r\n\t\tmaxGhosts: 7,\r\n\t\tglitches:\r\n\t\t\t'ABCDĐEFGHIJKLMNOPQRSTUVWXYZabcdđefghijklmnopqrstuvwxyzĄąĆćŻżŹźŃńóŁłАБВГҐДЂЕЁЄЖЗЅИІЇЙЈКЛЉМНЊОПРСТЋУЎФХЦЧЏШЩЪЫЬЭЮЯабвгґдђеёєжзѕиіїйјклљмнњопрстћуўфхцчџшщъыьэюяΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρστυφχψωάΆέΈέΉίϊΐΊόΌύΰϋΎΫΏĂÂÊÔƠƯăâêôơư一二三四五六七八九十百千上下左右中大小月日年早木林山川土空田天生花草虫犬人名女男子目耳口手足見音力気円入出立休先夕本文字学校村町森正水火玉王石竹糸貝車金雨赤青白数多少万半形太細広長点丸交光角計直線矢弱強高同親母父姉兄弟妹自友体毛頭顔首心時曜朝昼夜分週春夏秋冬今新古間方北南東西遠近前後内外場地国園谷野原里市京風雪雲池海岩星室戸家寺通門道話言答声聞語読書記紙画絵図工教晴思考知才理算作元食肉馬牛魚鳥羽鳴麦米茶色黄黒来行帰歩走止活店買売午汽弓回会組船明社切電毎合当台楽公引科歌刀番用何ĂÂÊÔƠƯăâêôơư1234567890‘?’“!”(%)[#]{@}/&<-+÷×=>$€£¥¢:;,.* •°·…±†‡æ«»¦¯—–~˜¨_øÞ¿▬▭▮▯┐└╛╟╚╔╘╒╓┘┌░▒▓○‼',\r\n\t\tglitchesFromString: false,\r\n\t\toneAtATime: false,\r\n\t\tstartText: 'previous',\r\n\t\tinstantErase: false,\r\n\t\tcombineGlitches: false,\r\n\t\tclassName: 'glitch-writing',\r\n\t\tleadingChar: {\r\n\t\t\tchar: '',\r\n\t\t\tonTyping: false,\r\n\t\t},\r\n\t}\r\n\tstatic presets = {\r\n\t\tdefault: { ...this.settings },\r\n\t\tnier: {\r\n\t\t\tdelay: [40, 80],\r\n\t\t\tfirstDelay: [0, 0],\r\n\t\t\tsteps: [3, 7],\r\n\t\t\tmaxGhosts: 0,\r\n\t\t\tglitches:\r\n\t\t\t\t'一二三四五六七八九十百千上下左右中大小月日年早木林山川土空田天生花草虫犬人名女男子目耳口手足見音力気円入出立休先夕本文字学校村町森正水火玉王石竹糸貝車金雨赤青白数多少万半形太細広長点丸交光角計直線矢弱強高同親母父姉兄弟妹自友体毛頭顔首心時曜朝昼夜分週春夏秋冬今新古間方北南東西遠近前後内外場地国園谷野原里市京風雪雲池海岩星室戸家寺通門道話言答声聞語読書記紙画絵図工教晴思考知才理算作元食肉馬牛魚鳥羽鳴麦米茶色黄黒来行帰歩走止活店買売午汽弓回会組船明社切電毎合当台楽公引科歌刀番用何',\r\n\t\t\toneAtATime: true,\r\n\t\t\tstartText: 'eraseWhole',\r\n\t\t\tinstantErase: false,\r\n\t\t\tcombineGlitches: true,\r\n\t\t\tglitchesFromString: true,\r\n\t\t\tleadingChar: false,\r\n\t\t},\r\n\t\tnormal: {\r\n\t\t\tdelay: [80, 230],\r\n\t\t\tfirstDelay: [0, 0],\r\n\t\t\toneAtATime: true,\r\n\t\t\tmaxGhosts: 0,\r\n\t\t\tstartText: 'matchingOnly',\r\n\t\t\tinstantErase: false,\r\n\t\t\tsteps: [0, 0],\r\n\t\t\tleadingChar: {\r\n\t\t\t\tchar: '_',\r\n\t\t\t\tonTyping: true,\r\n\t\t\t},\r\n\t\t},\r\n\t}\r\n\r\n\tconstructor(htmlElement, settings) {\r\n\t\tthis.state = GlitchedWriter.state\r\n\r\n\t\tthis.settings = {\r\n\t\t\t...GlitchedWriter.settings,\r\n\t\t\t...this.getPreset(settings),\r\n\t\t\t...settings,\r\n\t\t}\r\n\t\tthis.prevWrongSettings()\r\n\t\tthis.el = htmlElement\r\n\t\tthis.text = ''\r\n\t\tthis.endEvent = new CustomEvent('glitchWrote', { detail: this })\r\n\t}\r\n\r\n\twrite(text, settings) {\r\n\t\tthis.text = text\r\n\t\tif (this.state.typing) {\r\n\t\t\tthis.stop(true)\r\n\t\t\treturn Promise.resolve({\r\n\t\t\t\tfinished: false,\r\n\t\t\t\trestarting: this.state.restart,\r\n\t\t\t\telement: this.el,\r\n\t\t\t\ttext: this.text,\r\n\t\t\t\tdescription: `${this.el.outerHTML} is typing: \"${this.text}\"`,\r\n\t\t\t\ttextTable: this.textTable,\r\n\t\t\t})\r\n\t\t}\r\n\t\tthis.state.stop = false\r\n\t\tsettings = {\r\n\t\t\t...this.settings,\r\n\t\t\t...this.getPreset(settings),\r\n\t\t\t...settings,\r\n\t\t}\r\n\t\tthis.prevWrongSettings(settings)\r\n\t\treturn this.accualWrite(settings)\r\n\t}\r\n\r\n\tgetPreset(settings) {\r\n\t\tif (!settings) return {}\r\n\t\tlet preset = {}\r\n\t\tswitch (settings.preset) {\r\n\t\t\tcase 'default':\r\n\t\t\t\tpreset = GlitchedWriter.presets.default\r\n\t\t\t\tbreak\r\n\t\t\tcase 'nier':\r\n\t\t\t\tpreset = GlitchedWriter.presets.nier\r\n\t\t\t\tbreak\r\n\t\t\tcase 'normal':\r\n\t\t\t\tpreset = GlitchedWriter.presets.normal\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t\treturn preset\r\n\t}\r\n\r\n\tprevWrongSettings = (settings = this.settings) => {\r\n\t\tsettings.steps[0] = Math.min(settings.steps[0], settings.steps[1])\r\n\t\tsettings.delay[0] = Math.min(settings.delay[0], settings.delay[1])\r\n\t}\r\n\r\n\tstop(restart) {\r\n\t\tthis.state.restart = Boolean(restart)\r\n\t\tif (this.state.stop) return false\r\n\t\tthis.state.stop = true\r\n\t}\r\n\r\n\tasync accualWrite(settings) {\r\n\t\tconst { text, el, state } = this,\r\n\t\t\tafter = [...text] || [' '],\r\n\t\t\t{\r\n\t\t\t\tsteps,\r\n\t\t\t\tdelay,\r\n\t\t\t\tghostsProbability: ghostProb,\r\n\t\t\t\tclassName,\r\n\t\t\t\tleadingChar,\r\n\t\t\t\tinstantErase,\r\n\t\t\t\tstartText,\r\n\t\t\t} = settings,\r\n\t\t\trandomSteps = () => random(steps[0], steps[1], 'floor'),\r\n\t\t\tglitches = settings.glitchesFromString\r\n\t\t\t\t? stringWithoutRepeat(\r\n\t\t\t\t\t\ttext +\r\n\t\t\t\t\t\t\tel.textContent +\r\n\t\t\t\t\t\t\t(settings.combineGlitches ? settings.glitches : ''),\r\n\t\t\t\t  )\r\n\t\t\t\t: settings.glitches +\r\n\t\t\t\t  (settings.combineGlitches ? this.settings.glitches : '')\r\n\r\n\t\tlet { maxGhosts } = settings\r\n\r\n\t\tthis.textTable = (\r\n\t\t\tthis.textTable ||\r\n\t\t\t[...el.textContent]\r\n\t\t\t\t.filter(l => l !== '\\n')\r\n\t\t\t\t.map(l => ({\r\n\t\t\t\t\tl,\r\n\t\t\t\t\tghosts: '',\r\n\t\t\t\t}))\r\n\t\t).map(char => ({\r\n\t\t\t...char,\r\n\t\t\tsteps: randomSteps(),\r\n\t\t}))\r\n\r\n\t\tconst { textTable } = this\r\n\r\n\t\tstate.typing = true\r\n\t\tel.classList.add(className)\r\n\r\n\t\ttextTable.forEach((char, i) => (textTable[i].steps = randomSteps()))\r\n\r\n\t\tconst getTextToRender = () => {\r\n\t\t\t\tconst charAtTheEnd = (leadingChar.onTyping\r\n\t\t\t\t? state.typing\r\n\t\t\t\t: true)\r\n\t\t\t\t\t? leadingChar.char\r\n\t\t\t\t\t: ''\r\n\t\t\t\tconst stringFromTextTable = textTable.reduce(\r\n\t\t\t\t\t(total, { l, ghosts }) => (total += l + ghosts),\r\n\t\t\t\t\t'',\r\n\t\t\t\t)\r\n\t\t\t\treturn stringFromTextTable + (leadingChar ? charAtTheEnd : '')\r\n\t\t\t},\r\n\t\t\trenderText = () => {\r\n\t\t\t\tconst output = getTextToRender()\r\n\t\t\t\tel.textContent = output\r\n\t\t\t\tel.setAttribute('data-decrypted-text', output)\r\n\t\t\t},\r\n\t\t\tgetClitchChar = l =>\r\n\t\t\t\tglitches ? glitches[random(0, glitches.length, 'floor')] : l || '',\r\n\t\t\tlastMatching = after.reduce(\r\n\t\t\t\t(last, l, i) =>\r\n\t\t\t\t\ti < textTable.length &&\r\n\t\t\t\t\tlast === i - 1 &&\r\n\t\t\t\t\tl.toLowerCase() === textTable[i].l.toLowerCase()\r\n\t\t\t\t\t\t? i\r\n\t\t\t\t\t\t: last,\r\n\t\t\t\t-1,\r\n\t\t\t),\r\n\t\t\tbeginSplice = settings.oneAtATime ? textTable.length : lastMatching + 1\r\n\r\n\t\tif (\r\n\t\t\tinstantErase &&\r\n\t\t\t(startText === 'matchingOnly' || startText === 'eraseWhole')\r\n\t\t) {\r\n\t\t\tconst startIndex = startText === 'eraseWhole' ? 0 : lastMatching + 1\r\n\t\t\tfor (let i = startIndex; i < textTable.length; i++) textTable[i].l = ''\r\n\t\t\trenderText()\r\n\t\t}\r\n\r\n\t\twhile (textTable.length < after.length)\r\n\t\t\ttextTable.splice(random(beginSplice, textTable.length, 'floor'), 0, {\r\n\t\t\t\tl: '',\r\n\t\t\t\tsteps: randomSteps(),\r\n\t\t\t\tghosts: '',\r\n\t\t\t})\r\n\t\twhile (textTable.length > after.length)\r\n\t\t\tafter.splice(random(beginSplice, after.length, 'floor'), 0, '')\r\n\r\n\t\tconst results = []\r\n\r\n\t\tif (\r\n\t\t\t!instantErase &&\r\n\t\t\t(startText === 'matchingOnly' || startText === 'eraseWhole')\r\n\t\t) {\r\n\t\t\tconst from = startText === 'matchingOnly' ? lastMatching : -1\r\n\t\t\tif (settings.oneAtATime) {\r\n\t\t\t\tfor (let i = after.length - 1; i > from; i--) {\r\n\t\t\t\t\tresults.push(await handleLetter(i, ''))\r\n\t\t\t\t\ttextTable[i].steps = randomSteps()\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst promiseList = after\r\n\t\t\t\t\t.slice(from + 1)\r\n\t\t\t\t\t.map((l, i) => handleLetter(i, ''))\r\n\t\t\t\tresults.push(...(await Promise.all(promiseList)))\r\n\t\t\t\ttextTable.forEach((c, i) => (textTable[i].steps = randomSteps()))\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (settings.oneAtATime) {\r\n\t\t\t// eslint-disable-next-line\r\n\t\t\tfor (let i in after) results.push(await handleLetter(i, after[i]))\r\n\t\t} else {\r\n\t\t\tconst promiseList = after.map((l, i) => handleLetter(i, l))\r\n\t\t\tresults.push(...(await Promise.all(promiseList)))\r\n\t\t}\r\n\r\n\t\tlet result = results.every(r => r)\r\n\r\n\t\tconst restarting = state.restart\r\n\t\tstate.restart = false\r\n\t\tstate.typing = false\r\n\t\tel.classList.remove(className)\r\n\t\trenderText()\r\n\t\t// && this.text === getTextToRender()\r\n\t\tif (result && !restarting) {\r\n\t\t\tresult = {\r\n\t\t\t\tfinished: result,\r\n\t\t\t\trestarting,\r\n\t\t\t\telement: this.el,\r\n\t\t\t\ttext,\r\n\t\t\t\tdescription: `${this.el.outerHTML} types: \"${text}\"`,\r\n\t\t\t\ttextTable,\r\n\t\t\t}\r\n\t\t\tthis.textTable = null\r\n\t\t\tel.dispatchEvent(this.endEvent)\r\n\t\t\treturn result\r\n\t\t}\r\n\t\treturn this.write(this.text, settings)\r\n\r\n\t\tfunction handleLetter(i, newL) {\r\n\t\t\tlet [dMin, dMax] = [...delay]\r\n\t\t\tlet [dFirstMin, dFirstMax] = [...settings.firstDelay]\r\n\t\t\tlet isFirst = 1\r\n\t\t\tif (newL === '') {\r\n\t\t\t\tdMin /= 1.5\r\n\t\t\t\tdMax /= 1.5\r\n\t\t\t\tdFirstMin /= 2\r\n\t\t\t\tdFirstMax /= 2\r\n\t\t\t}\r\n\r\n\t\t\treturn new Promise(resolve => {\r\n\t\t\t\tconst char = textTable[i]\r\n\t\t\t\tloop()\r\n\r\n\t\t\t\tfunction loop() {\r\n\t\t\t\t\tconst timeout =\r\n\t\t\t\t\t\trandom(dMin, dMax) +\r\n\t\t\t\t\t\trandom(dFirstMin, dFirstMax, null, true) * isFirst\r\n\t\t\t\t\tisFirst = 0\r\n\r\n\t\t\t\t\tif (char.l === newL && char.ghosts === '') {\r\n\t\t\t\t\t\tchar.steps = 0\r\n\t\t\t\t\t\tresolve(true)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (state.stop) {\r\n\t\t\t\t\t\tresolve(false)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tchar.steps--\r\n\r\n\t\t\t\t\t\tchar.l =\r\n\t\t\t\t\t\t\tchar.steps <= 0 || char.l === newL\r\n\t\t\t\t\t\t\t\t? newL\r\n\t\t\t\t\t\t\t\t: getClitchChar(char.l)\r\n\r\n\t\t\t\t\t\tif (char.l === newL && char.ghosts !== '')\r\n\t\t\t\t\t\t\tchar.ghosts = char.ghosts.slice(0, -1)\r\n\t\t\t\t\t\telse if (maxGhosts > 0 && Math.random() < ghostProb) {\r\n\t\t\t\t\t\t\tchar.ghosts += getClitchChar()\r\n\t\t\t\t\t\t\tmaxGhosts--\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\trenderText()\r\n\r\n\t\t\t\t\t\tloop()\r\n\t\t\t\t\t}, timeout)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst glitchWrite = (htmlElement, string, settings) =>\r\n\tnew GlitchedWriter(htmlElement, settings).write(string)\r\n\r\nconst setGlitchedWriter = (htmlElement, settings) =>\r\n\tnew GlitchedWriter(htmlElement, settings)\r\n\r\nmodule.exports = { setGlitchedWriter, glitchWrite }\r\n"],"names":["regeneratorRuntime","require","putEasing","p","random","min","max","mathFunc","easing","Math","w","stringWithoutRepeat","string","Set","reduce","set","l","GlitchedWriter","htmlElement","settings","steps","delay","state","getPreset","prevWrongSettings","el","text","endEvent","CustomEvent","detail","typing","stop","Promise","resolve","finished","restarting","restart","element","description","outerHTML","textTable","accualWrite","preset","presets","default","nier","normal","Boolean","handleLetter","instantErase","i","newL","dMin","dMax","firstDelay","dFirstMin","dFirstMax","isFirst","char","loop","timeout","ghosts","setTimeout","getClitchChar","slice","maxGhosts","ghostProb","renderText","after","ghostsProbability","className","leadingChar","startText","randomSteps","glitches","glitchesFromString","textContent","combineGlitches","filter","map","classList","add","forEach","getTextToRender","charAtTheEnd","onTyping","stringFromTextTable","total","output","setAttribute","length","lastMatching","last","toLowerCase","beginSplice","oneAtATime","splice","results","from","push","promiseList","all","c","result","every","r","remove","dispatchEvent","write","glitchWrite","setGlitchedWriter","module","exports"],"mappings":"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","ignoreList":[0,1],"debugId":null}}]
}